user openresty;
worker_processes auto;
pid /run/nginx.pid;

# set open fd limit to 10000
worker_rlimit_nofile 10000;

worker_priority -18;
worker_rlimit_core 10M;

events {
	worker_connections 4000;
	# multi_accept on;
	use epoll;
}

http {

	##
	# Basic Settings
	##

	sendfile on;
	tcp_nopush on;
	tcp_nodelay on;
	keepalive_requests 2000;
	keepalive_timeout 75;
	types_hash_max_size 2048;
	# server_tokens off;

	underscores_in_headers on;
	
	# server_names_hash_bucket_size 64;
	# server_name_in_redirect off;

	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	##
	# SSL Settings
	##

	ssl_protocols TLSv1 TLSv1.1 TLSv1.2; # Dropping SSLv3, ref: POODLE
	ssl_prefer_server_ciphers on;

	##
	# Logging Settings
	##
	uninitialized_variable_warn off; 
	
        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent $request_time "$scheme" "$http_host" "$http_referer" '
                      '"$http_user_agent" "$pid"';

        access_log /var/log/nginx/access.log main buffer=32k flush=2s;
        error_log /var/log/nginx/error.log info;

	##
	# Gzip Settings
	##

	gzip on;
	gzip_disable "msie6";

	# gzip_vary on;
	# gzip_proxied any;
	# gzip_comp_level 6;
	# gzip_buffers 16 8k;
	# gzip_http_version 1.1;
	# gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;


        client_max_body_size 100000M;
        client_body_buffer_size  10M;

	##
	# Virtual Host Configs
	##

	include /etc/nginx/conf.d/*.conf;
	include /etc/nginx/sites-enabled/*;
	
        resolver 8.8.8.8;

	##
	# Openresty/Lua - master process init
	##
		
	init_by_lua_block {
                
           local function split(str, pat)
                local t = {}  -- NOTE: use {n = 0} in Lua-5.0
                local fpat = "(.-)" .. pat
                local last_end = 1
                local s, e, cap = str:find(fpat, 1)
                while s do
                        if s ~= 1 or cap ~= "" then
                            table.insert(t,cap)
                        end
                        last_end = e+1
                        s, e, cap = str:find(fpat, last_end)
                end
                if last_end <= #str then
                        cap = str:sub(last_end)
                        table.insert(t, cap)
                end
                return t
           end

           local p = io.popen('find -L "/usr/local/openresty/nginx/init_master" -type f')  --Open directory look for files, save data in p. By giving '-type f' as parameter, it returns all files.
           for file in p:lines() do                         --Loop through all files
                ngx.log( ngx.INFO, "Init Master by Lua - found file: ", file );
                local file_path_parts = split( file, "/+");
                local file_name = file_path_parts[ #file_path_parts ];
                file_name = split( file_name, "%.");
                if file_name[2] and ( file_name[2] == "lua" ) and not file_name[3] then -- skip all not "*.lua" and "*.lua.bak" files
                    ngx.log( ngx.INFO, "Init Master by Lua - loading file: ", file );
                    local op_status, error = pcall( dofile, file );
                    if op_status ~= true then
                        ngx.log( ngx.ERR, "Init Master by Lua - unable to load file: ", file, " error: ", error );
                    end
                end
           end           

        }

	##
	# Openresty/Lua - worker processes init
	##

	init_worker_by_lua_block {
                
           local function split(str, pat)
                local t = {}  -- NOTE: use {n = 0} in Lua-5.0
                local fpat = "(.-)" .. pat
                local last_end = 1
                local s, e, cap = str:find(fpat, 1)
                while s do
                        if s ~= 1 or cap ~= "" then
                            table.insert(t,cap)
                        end
                        last_end = e+1
                        s, e, cap = str:find(fpat, last_end)
                end
                if last_end <= #str then
                        cap = str:sub(last_end)
                        table.insert(t, cap)
                end
                return t
           end

           local p = io.popen('find -L "/usr/local/openresty/nginx/init_worker" -type f')  --Open directory look for files, save data in p. By giving '-type f' as parameter, it returns all files.
           for file in p:lines() do                         --Loop through all files
                ngx.log( ngx.INFO, "Init Worker by Lua - found file: ", file );
                local file_path_parts = split( file, "/+");
                local file_name = file_path_parts[ #file_path_parts ];
                file_name = split( file_name, "%.");
                if file_name[2] and ( file_name[2] == "lua" ) and not file_name[3] then -- skip all not "*.lua" and "*.lua.bak" files
                    ngx.log( ngx.INFO, "Init Worker by Lua - loading file: ", file );
                    local op_status, error = pcall( dofile, file );
                    if op_status ~= true then
                        ngx.log( ngx.ERR, "Init Worker by Lua - unable to load file: ", file, " error: ", error );
                    end
                end
           end           

        }

}

